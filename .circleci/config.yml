# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    environment:
      CC_TEST_REPORTER_ID: 8d6b13736e5671bfae1278c53eae2dc43fe937f0deb7215ec76b2b684bea0682
    docker:
      # Using Carbon, the Node.js 8.x LTS branch
      - image: circleci/node:carbon
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      # run tests!

      - run: 
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            npm test -- --testResultsProcessor="jest-junit" --coverage
            ./cc-test-reporter after-build --coverage-input-type lcov --exit-code $?
      - store_artifacts:
          path: junit
      - store_test_results:
          path: junit
      - store_artifacts:
          path: coverage
      # run build!
      - run: |
          npm run build
      - run: |
          tar -czf build.tar.gz build
      - store_artifacts:
          path: bundlesize
      - store_artifacts:
          path: build.tar.gz
