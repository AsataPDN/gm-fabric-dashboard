{
  "service": "poa.Poa",
  "instance": "65f9c5ab14a8",

  "system/cpu/used_percent": 0,
  "system/cpu/count": 4,
  "system/cpu/arch": "amd64",
  "system/os": "linux",
  "system/memory/max": 1538101248,
  "system/memory/used": 557776896,
  "system/memory/used_percent": 26.61304,
  
  "runtime/start_time": {When the runtime started in UNIX ms time}
  
  "runtime/goroutine/count": 21.0,
  "runtime/mem/alloc/bytes": 1611776.0,
  "runtime/mem/malloc/count": 120447.0, {This is the number of malloc operations?}
  "runtime/mem/free_count": 105387.0, {Does this need units?}
  "runtime/mem/sys_bytes": 9509112.0,
  "runtime/heap/objects": 15060.0, {Is this size or count of the instances?}
  {Is it possible to get heap stats like "max bytes", "bytes used", and "bytes committed"?}
  "runtime/gc/cycles": 6.0,
  "runtime/gc/pause_ms.avg": 341294.0, {I'd prefer this as in milliseconds}
  "runtime/gc/pause_ms.sum": 2220741.0, {I'd prefer this as in milliseconds}

  {What would it take to get totals number of invocations so we can contextualize the error count / ID hot code?}
  {My regexp will match on function/ and treat alphanumerics up to the next slash as the function name}
  "function/GetKiq/latency_ms.avg": 1.0,
  "function/GetKiq/latency_ms.count": 1,
  "function/GetKiq/latency_ms.max": 1,
  "function/GetKiq/latency_ms.min": 1,
  "function/GetKiq/latency_ms.sum": 1,
  "function/GetKiq/latency_ms.p50": 1,
  "function/GetKiq/latency_ms.p90": 1,
  "function/GetKiq/latency_ms.p95": 1,
  "function/GetKiq/latency_ms.p99": 1,
  "function/GetKiq/latency_ms.p9990": 1,
  "function/GetKiq/latency_ms.p9999": 1,
  "function/GetKiq/errors.count": 0,
  "function/GetKiq/in_throughput": 435,
  "function/GetKiq/out_throughput": 329,
  "function/GetKiqs/latency_ms.avg": 5.0,
  "function/GetKiqs/latency_ms.count": 1,
  "function/GetKiqs/latency_ms.max": 5,
  "function/GetKiqs/latency_ms.min": 5,
  "function/GetKiqs/latency_ms.sum": 5,
  "function/GetKiqs/latency_ms.p50": 5,
  "function/GetKiqs/latency_ms.p90": 5,
  "function/GetKiqs/latency_ms.p95": 5,
  "function/GetKiqs/latency_ms.p99": 5,
  "function/GetKiqs/latency_ms.p9990": 5,
  "function/GetKiqs/latency_ms.p9999": 5,
  "function/GetKiqs/errors.count": 0,
  "function/GetKiqs/in_throughput": 30,
  "function/GetKiqs/out_throughput": 25243,
  "function/GetRegions/latency_ms.avg": 1.0,
  "function/GetRegions/latency_ms.count": 1,
  "function/GetRegions/latency_ms.max": 1,
  "function/GetRegions/latency_ms.min": 1,
  "function/GetRegions/latency_ms.sum": 1,
  "function/GetRegions/latency_ms.p50": 1,
  "function/GetRegions/latency_ms.p90": 1,
  "function/GetRegions/latency_ms.p95": 1,
  "function/GetRegions/latency_ms.p99": 1,
  "function/GetRegions/latency_ms.p9990": 1,
  "function/GetRegions/latency_ms.p9999": 1,
  "function/GetRegions/errors.count": 0,
  "function/GetRegions/in_throughput": 32,
  "function/GetRegions/out_throughput": 2464,
  "function/all/latency_ms.avg": 2.333333,
  "function/all/latency_ms.count": 3,
  "function/all/latency_ms.max": 5,
  "function/all/latency_ms.min": 1,
  "function/all/latency_ms.sum": 7,
  "function/all/latency_ms.p50": 1,
  "function/all/latency_ms.p90": 5,
  "function/all/latency_ms.p95": 5,
  "function/all/latency_ms.p99": 5,
  "function/all/latency_ms.p9990": 5,
  "function/all/latency_ms.p9999": 5,
  "function/all/errors.count": 0,
  "function/all/in_throughput": 497, {What is this measuring and what are the units?}
  "function/all/out_throughput": 28036
  
  
  { What about route level metrics?}
  {My regexp will match on route/ and treat alphanumerics up to a slash followed by an HTTP verb as the route...} 
  {this is problematic because the / is used as a delimiter AND has semantic meaning as part of the route}
  {I have this issue currently with Finagle. A better approach would be to encode as a URI, thereby replacing / with %2F}
  "route/kiqs/GET/response_size"
  "route/kiqs/GET/time.avg"
  "route/kiqs/GET/time/2xx.avg"
  "route/kiqs/GET/time/200.avg"
  { Or HTTP / HTTP metrics?}
  "http/requests"
  "http/success"
  "http/request/payload_bytes"
  "http/request/latency_ms"
  "http/response/payload_bytes"
  "http/response/latency_ms"
  "https/requests"
  "https/success"
  "https/request/payload_bytes"
  "https/request/latency_ms"
  "https/response/payload_bytes"
  "https/response/latency_ms"
}
