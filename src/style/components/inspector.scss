// components/jsonInspector.scss
@import '../variables.scss';
@import '../mixins.scss';

// Local Variables

// Helpers

// Styles

.inspector {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0 auto;
  font-family: $font-stack-data;
  padding-top: $padding-base * 5;
  line-height: 1.2;
  height: 100%;
  border-radius: $border-radius-base;
  background-color: $color-grey-4;
}

.inspector__data {
  position: absolute;
  overflow-x: hidden;
  width: 100%;
  top: 56px;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0 auto;
  overflow-y: scroll;
  word-break: break-all;
}

.inspector__key {
  display: inline-block;
  width: 2.5em;
  text-align: right;
  color: $color-content;
  opacity: .5;
  flex: 0 0 2.5em;
}
.inspector__value {
  margin-left: $padding-base;
  color: saturate(darken($color-highlight, 5%), 5%);
  word-break: break-all;
  flex: 1 1 100%;
}

.inspector__search {
  @include function-button-base();
  @include function-button-style();
  @include function-button-size();
  appearance: none;
  user-select: auto;
  text-align: left;
  box-shadow: inset 0 0 0 rgba(0, 0, 0, 0), 0 0 0 rgba(0, 0, 0, 0),
    0 0 0 rgba(0, 0, 0, 0);
  width: 100%;

  &[type="text"],
  &[type="search"] {
    cursor: text;

    &:focus {
      &::placeholder {
        opacity: 0;
      }
    }
  }

  &::placeholder {
    color: currentColor;
    opacity: 1;
    text-align: center;
  }

  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  &:focus {
    outline: none;
    box-shadow: inset 0 0 0 rgba(255, 255, 255, .5),
      0 0 0 1px transparentize($color-highlight, .25),
      0 0 0 4px transparentize($color-highlight, .75);
  }
}

.inspector__toolbar {
  z-index: 100;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: $padding-base * 7;
  padding: $padding-base;
  display: flex;
  align-items: stretch;
}

.inspector,
.inspector__toolbar + .inspector__leaf {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.inspector__toolbar + .inspector__leaf {
  overflow-y: scroll;
  overflow-scroll: touch;
  padding: $padding-base*7 $padding-base*3 $padding-base*2 $padding-base*2;
}

.inspector__line {
  display: block;
  position: relative;
  cursor: pointer;
  display: flex;
  padding-top: $padding-base * .5;
  padding-bottom: $padding-base * .5;
  word-wrap: break-word;
}

.inspector__line__selected {
  background: $color-highlight;
}

.inspector__line::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  pointer-events: none;
}

.inspector__line:hover::after {
  // background: rgba(0, 0, 0, 0.06);
}
.inspector__line:hover .inspector__value {
  text-decoration: underline;
}

.inspector__leaf_composite > .inspector__line {
  cursor: pointer;
}

.inspector__radio,
.inspector__flatpath {
  display: none;
}

.inspector__value {
}

.inspector__search {
}

.inspector__key {
}

.inspector__value_helper,
.inspector__value_null,
.inspector__not-found {
  // color: #b0b0b0;
}

.inspector__value_string {
  // color: #798953;
}

.inspector__value_boolean {
  // color: #75b5aa;
}

.inspector__value_number {
  // color: #d28445;
}

.inspector__hl {
  background: $color-highlight;
  color: #fff;
  box-shadow: 0 0 0 3px $color-highlight;
  border-radius: $border-radius-base - 2px;
}

.inspector__show-original {
  // display: inline-block;
  // padding: 0 6px;
  // color: #666;
  cursor: pointer;
}

.inspector__show-original:hover {
  // color: #111;
}

.inspector__show-original::before {
  content: 'â¥‚';
}

.inspector__show-original:hover::after {
  content: 'expand';
}
