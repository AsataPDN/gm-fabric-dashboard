// mixins.scss
@import "variables.scss";

// Local Variables

$button-font-size-base-default: $font-size-base;
$button-font-weight-default: 600;
$button-icon-ratio-default: 1; // default: 1.5em
$button-size-default: normal; // xs, sm, normal, lg, xl // default: normal
$button-background-color-base-default: $color-white;
$button-border-color-base-default: $button-background-color-base-default;
$button-label-color-base-default: contrast-color(
  $button-background-color-base-default
);

$button-content-orientation-default: horizontal; // horizontal, vertical // default: horizontal
$button-content-spacing-base-default: spacing-scale(0.5);

$button-border-width-base-default: 1px;
$button-border-radius-base-default: $border-radius-base;

$button-reaction-style-default: darken; // darken, lighten // default: darken
$button-reaction-degree-default: 6%; // 0-100% // default: 6%

$button-outline-style-default: raised-outline; // raised-outline, shadow, raised, outline, none // default: raised-outline
$button-outline-style-depth-default: 6%; // 0â€“100% // default: 6%

$button-hover-reaction-degree-default: $button-reaction-degree-default * 0.25;
$button-active-reaction-degree-default: $button-reaction-degree-default * 2;
$button-down-reaction-degree-default: $button-reaction-degree-default * 1;

$button-active-mix-base-color: $color-highlight;
$button-active-mix-base-label-color: contrast-color(
  $button-active-mix-base-color
);
$button-active-mix-degree: 0%;

// Helpers
@function mix-with-active($color) {
  @return mix($color, $button-active-mix-base-color, $button-active-mix-degree);
}

// Button, Inspector, Forms
@mixin function-button-base(
$button-border-width-base: $button-border-width-base-default,
$button-font-weight: $button-font-weight-default) {
  box-sizing: border-box;
  user-select: none;
  font-family: $font-stack-base;
  font-weight: $button-font-weight;
  border-width: $button-border-width-base;
  line-height: $line-height-base;
  border-style: solid;
  text-transform: none;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    transition: all 0.1s ease;
  }

  &:focus,
  &:active {
    transition: all 0 ease;
  }

  &:not[disabled] {
    &:focus {
      outline: none;
      box-shadow: inset 0 0 0 rgba(255, 255, 255, 0.5),
        0 0 0 1px transparentize($color-highlight, 0.25),
        0 0 0 4px transparentize($color-highlight, 0.75);
    }
  }

  > * {
    flex: 0 1 auto;
  }

  .label-suffix,
  .label-prefix {
    opacity: 0.5;
  }

  .label-suffix {
    margin-left: spacing-scale(1);
  }
  .label-prefix {
    margin-right: spacing-scale(1);
  }
}

// Button, Inspector, Forms
@mixin function-button-size(
  $button-size: $button-size-default,
  $button-font-size-base: $font-size-base,
  $button-icon-ratio: $button-icon-ratio-default,
  $button-border-radius-base: $button-border-radius-base-default,
  $button-content-spacing-base: $button-content-spacing-base-default
) {
  @if $button-size == normal {
    font-size: $button-font-size-base;
    border-radius: $button-border-radius-base;
    padding: $button-content-spacing-base * 0.35 $button-content-spacing-base *
      1;
  } @else if $button-size == xs {
    font-size: ceil($button-font-size-base * 0.5);
    border-radius: $button-border-radius-base;
    padding: $button-content-spacing-base * 0.25 $button-content-spacing-base *
      1;
    text-transform: uppercase;
  } @else if $button-size == sm {
    font-size: ceil($button-font-size-base * 0.75);
    border-radius: $button-border-radius-base;
    padding: $button-content-spacing-base * 0.25 $button-content-spacing-base *
      1;
    text-transform: uppercase;
  } @else if $button-size == lg {
    font-size: ceil($button-font-size-base * 1.25);
    border-radius: $button-border-radius-base;
    padding: $button-content-spacing-base * 0.5 $button-content-spacing-base * 1;
  } @else if $button-size == xl {
    font-size: ceil($button-font-size-base * 1.75);
    border-radius: $button-border-radius-base * 1.25;
    padding: $button-content-spacing-base * 0.5 $button-content-spacing-base * 1;
  }
}

// Button, Inspector, Forms
@mixin function-button-style(
$button-background-color-base: $button-background-color-base-default,
$button-label-color-base: contrast-color($button-background-color-base),
$button-border-color-base: $button-background-color-base,
$button-border-width-base: $button-border-width-base-default,
$button-border-radius-base: $button-border-radius-base-default,
$button-reaction-style: $button-reaction-style-default,
$button-reaction-degree: $button-reaction-degree-default,
$button-outline-style: $button-outline-style-default,
$button-outline-style-depth: $button-outline-style-depth-default,
$button-hover-reaction-degree: $button-hover-reaction-degree-default,
$button-active-reaction-degree: $button-active-reaction-degree-default,
$button-down-reaction-degree: $button-down-reaction-degree-default,
$button-content-orientation: $button-content-orientation-default,
$button-content-spacing-base: $button-content-spacing-base-default,
$button-font-size-base: $button-font-size-base-default,
$button-font-weight: $button-font-weight-default) {
  // Instantiate each map for later processing
  $static-styles: ();
  $static-label-styles: (color: $button-label-color-base);
  $static-border-styles: (border-color: $button-border-color-base);
  $static-border-top-styles: ();
  $static-border-bottom-styles: ();
  $static-background-styles: (background-color: $button-background-color-base);
  $hover-styles: ();
  $hover-label-styles: ();
  $hover-border-styles: ();
  $hover-border-top-styles: ();
  $hover-border-bottom-styles: ();
  $hover-background-styles: ();
  $active-styles: ();
  $active-label-styles: ();
  $active-border-styles: ();
  $active-border-top-styles: ();
  $active-border-bottom-styles: ();
  $active-background-styles: ();
  $down-styles: ();
  $down-label-styles: ();
  $down-border-styles: ();
  $down-border-top-styles: ();
  $down-border-bottom-styles: ();
  $down-background-styles: ();
  $active-down-styles: ();
  $active-down-label-styles: ();
  $active-down-border-styles: ();
  $active-down-border-top-styles: ();
  $active-down-border-bottom-styles: ();
  $active-down-background-styles: ();

  // Create styles for each property, in each state, under each processed condition

  @if $button-reaction-style == darken {
    // Hover styles
    $hover-background-styles: (
      background-color: darker-color($button-background-color-base, $button-hover-reaction-degree)
    );
    $hover-label-styles: (
      color: darker-color($button-label-color-base, $button-hover-reaction-degree)
    );
    $hover-border-styles: (
      border-color: darker-color($button-border-color-base, $button-hover-reaction-degree)
    );
    // Down styles
    $down-background-styles: (
      background-color: darker-color($button-background-color-base, $button-hover-reaction-degree +
            $button-down-reaction-degree)
    );
    $down-label-styles: (
      color: darker-color($button-label-color-base, $button-hover-reaction-degree +
            $button-down-reaction-degree)
    );
    $down-border-styles: (
      border-color: darker-color($button-border-color-base, $button-hover-reaction-degree +
            $button-down-reaction-degree)
    );
    // Active styles
    $active-background-styles: (
      background-color: mix-with-active(darker-color($button-background-color-base, $button-active-reaction-degree))
    );
    $active-label-styles: (
      color: mix(darker-color($button-label-color-base, $button-active-reaction-degree), $button-active-mix-base-label-color, $button-active-mix-degree)
    );
    $active-border-styles: (
      border-color: mix-with-active(darker-color($button-border-color-base, $button-active-reaction-degree))
    );
    // Active Down styles
    $active-down-background-styles: (
      background-color: mix-with-active(darker-color($button-background-color-base, $button-active-reaction-degree +
              $button-down-reaction-degree))
    );
    $active-down-label-styles: (
      color: mix(darker-color($button-label-color-base, $button-active-reaction-degree +
              $button-down-reaction-degree), $button-active-mix-base-label-color, $button-active-mix-degree)
    );
    $active-down-border-styles: (
      border-color: mix-with-active(darker-color($button-border-color-base, $button-active-reaction-degree +
              $button-down-reaction-degree))
    );
  } @else {
    // Assume button reaction style == lighten
    // Hover styles
    $hover-background-styles: (
      background-color: lighten-color($button-background-color-base, $button-hover-reaction-degree)
    );
    $hover-label-styles: (
      color: lighten-color($button-label-color-base, $button-hover-reaction-degree)
    );
    $hover-border-style: (
      border-color: lighten-color($button-border-color-base, $button-hover-reaction-degree)
    );
    // Down styles
    $down-background-styles: (
      background-color: lighten-color($button-background-color-base, $button-hover-reaction-degree +
            $button-down-reaction-degree)
    );
    $down-label-styles: (
      color: lighten-color($button-label-color-base, $button-down-reaction-degree)
    );
    $down-border-style: (
      border-color: lighten-color($button-border-color-base, $button-down-reaction-degree)
    );
    // Active styles
    $active-background-styles: (
      background-color: lighten-color($button-background-color-base, $button-active-reaction-degree)
    );
    $active-label-styles: (
      color: lighten-color($button-label-color-base, $button-active-reaction-degree)
    );
    $active-border-styles: (
      border-color: lighten-color($button-border-color-base, $button-active-reaction-degree)
    );
    // Active Down styles
    $active-down-background-styles: (
      background-color: lighten-color($button-background-color-base, $button-active-reaction-degree +
            $button-down-reaction-degree)
    );
    $active-down-label-styles: (
      color: lighten-color($button-label-color-base, $button-active-reaction-degree +
            $button-down-reaction-degree)
    );
    $active-down-border-styles: (
      border-color: lighten-color($button-border-color-base, $button-active-reaction-degree +
            $button-down-reaction-degree)
    );
  }

  @if $button-outline-style == shadow {
    $static-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($static-border-styles, border-color), $button-outline-style-depth)
    );
    $hover-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($hover-border-styles, border-color), $button-outline-style-depth)
    );
    $down-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($down-border-styles, border-color), $button-outline-style-depth)
    );
    $active-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($active-border-styles, border-color), $button-outline-style-depth)
    );
    $active-down-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth)
    );
  } @else if $button-outline-style == raised-outline {
    // Static styles
    $static-border-styles: (
      border-color: darker-color(map-get($static-border-styles, border-color), $button-outline-style-depth)
    );
    $static-border-top-styles: (
      border-top-color: lighten-color(map-get($static-border-styles, border-color), $button-outline-style-depth *
            0.5)
    );
    $static-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($static-border-styles, border-color), $button-outline-style-depth)
    );
    // Hover styles
    $hover-border-styles: (
      border-color: darker-color(map-get($hover-border-styles, border-color), $button-outline-style-depth)
    );
    $hover-border-top-styles: (
      border-top-color: lighten-color(map-get($hover-border-styles, border-color), $button-outline-style-depth *
            0.5)
    );
    $hover-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($hover-border-styles, border-color), $button-outline-style-depth)
    );
    // Down styles
    $down-border-styles: (
      border-color: darker-color(map-get($down-border-styles, border-color), $button-outline-style-depth)
    );
    $down-border-top-styles: (
      border-top-color: lighten-color(map-get($down-border-styles, border-color), $button-outline-style-depth *
            0.5)
    );
    $down-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($down-border-styles, border-color), $button-outline-style-depth)
    );
    // Active styles
    $active-border-styles: (
      border-color: darker-color(map-get($active-border-styles, border-color), $button-outline-style-depth)
    );
    $active-border-top-styles: (
      border-top-color: lighten-color(map-get($active-border-styles, border-color), $button-outline-style-depth *
            0.5)
    );
    $active-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($active-border-styles, border-color), $button-outline-style-depth)
    );
    // Active Down styles
    $active-down-border-styles: (
      border-color: darker-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth)
    );
    $active-down-border-top-styles: (
      border-top-color: lighten-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth *
            0.5)
    );
    $active-down-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth)
    );
  } @else if $button-outline-style == raised {
    // Static styles
    $static-border-top-styles: (
      border-top-color: lighten-color(map-get($static-border-styles, border-color), $button-outline-style-depth)
    );
    $static-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($static-border-styles, border-color), $button-outline-style-depth)
    );
    // Hover styles
    $hover-border-top-styles: (
      border-top-color: lighten-color(map-get($hover-border-styles, border-color), $button-outline-style-depth)
    );
    $hover-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($hover-border-styles, border-color), $button-outline-style-depth)
    );
    // Down styles
    $down-border-top-styles: (
      border-top-color: lighten-color(map-get($down-border-styles, border-color), $button-outline-style-depth)
    );
    $down-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($down-border-styles, border-color), $button-outline-style-depth)
    );
    // Active styles
    $active-border-top-styles: (
      border-top-color: lighten-color(map-get($active-border-styles, border-color), $button-outline-style-depth)
    );
    $active-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($active-border-styles, border-color), $button-outline-style-depth)
    );
    // Active Down styles
    $active-down-border-top-styles: (
      border-top-color: lighten-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth)
    );
    $active-down-border-bottom-styles: (
      border-bottom-color: darker-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth)
    );
  } @else if $button-outline-style == outline {
    @if $button-reaction-style == darken {
      // Static styles
      $static-border-styles: (
        border-color: darker-color(map-get($static-border-styles, border-color), $button-outline-style-depth)
      );
      // Hover styles
      $hover-border-styles: (
        border-color: darker-color(map-get($hover-border-styles, border-color), $button-outline-style-depth)
      );
      // Down styles
      $down-border-styles: (
        border-color: darker-color(map-get($down-border-styles, border-color), $button-outline-style-depth)
      );
      // Active styles
      $active-border-styles: (
        border-color: darker-color(map-get($active-border-styles, border-color), $button-outline-style-depth)
      );
      // Active Down styles
      $active-down-border-styles: (
        border-color: darker-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth)
      );
    } @else {
      // Assume button-reaction-style == lighten
      // Static styles
      $static-border-styles: (
        border-color: darker-color(map-get($static-border-styles, border-color), $button-outline-style-depth)
      );
      // Hover styles
      $hover-border-styles: (
        border-color: darker-color(map-get($hover-border-styles, border-color), $button-outline-style-depth)
      );
      // Down styles
      $down-border-styles: (
        border-color: darker-color(map-get($down-border-styles, border-color), $button-outline-style-depth)
      );
      // Active styles
      $active-border-styles: (
        border-color: darker-color(map-get($active-border-styles, border-color), $button-outline-style-depth)
      );
      // Active Down styles
      $active-down-border-styles: (
        border-color: darker-color(map-get($active-down-border-styles, border-color), $button-outline-style-depth)
      );
    }
  }

  // Pass properties into style maps
  $static-styles: map-merge($static-styles, $static-background-styles);
  $static-styles: map-merge($static-styles, $static-label-styles);
  $static-styles: map-merge($static-styles, $static-border-styles);
  $static-styles: map-merge($static-styles, $static-border-top-styles);
  $static-styles: map-merge($static-styles, $static-border-bottom-styles);
  $hover-styles: map-merge($hover-styles, $hover-background-styles);
  $hover-styles: map-merge($hover-styles, $hover-label-styles);
  $hover-styles: map-merge($hover-styles, $hover-border-styles);
  $hover-styles: map-merge($hover-styles, $hover-border-top-styles);
  $hover-styles: map-merge($hover-styles, $hover-border-bottom-styles);
  $down-styles: map-merge($down-styles, $down-background-styles);
  $down-styles: map-merge($down-styles, $down-label-styles);
  $down-styles: map-merge($down-styles, $down-border-styles);
  $down-styles: map-merge($down-styles, $down-border-top-styles);
  $down-styles: map-merge($down-styles, $down-border-bottom-styles);
  $active-styles: map-merge($active-styles, $active-background-styles);
  $active-styles: map-merge($active-styles, $active-label-styles);
  $active-styles: map-merge($active-styles, $active-border-styles);
  $active-styles: map-merge($active-styles, $active-border-top-styles);
  $active-styles: map-merge($active-styles, $active-border-bottom-styles);
  $active-down-styles: map-merge(
    $active-down-styles,
    $active-down-label-styles
  );
  $active-down-styles: map-merge(
    $active-down-styles,
    $active-down-background-styles
  );
  $active-down-styles: map-merge(
    $active-down-styles,
    $active-down-border-styles
  );
  $active-down-styles: map-merge(
    $active-down-styles,
    $active-down-border-top-styles
  );
  $active-down-styles: map-merge(
    $active-down-styles,
    $active-down-border-bottom-styles
  );

  // Pass mapped properties, when present, into proper pseudo-element

  @if map-has-key($static-styles, background-color) {
    background-color: map-get($static-styles, background-color);
  }
  @if map-has-key($static-styles, border-color) {
    border-color: map-get($static-styles, border-color);
  }
  @if map-has-key($static-styles, border-top-color) {
    border-top-color: map-get($static-styles, border-top-color);
  }
  @if map-has-key($static-styles, border-bottom-color) {
    border-bottom-color: map-get($static-styles, border-bottom-color);
  }
  @if map-has-key($static-styles, color) {
    color: map-get($static-styles, color);
  }

  &:hover {
    @if map-has-key($hover-styles, background-color) {
      background-color: map-get($hover-styles, background-color);
    }
    @if map-has-key($hover-styles, border-color) {
      border-color: map-get($hover-styles, border-color);
    }
    @if map-has-key($hover-styles, border-top-color) {
      border-top-color: map-get($hover-styles, border-top-color);
    }
    @if map-has-key($hover-styles, border-bottom-color) {
      border-bottom-color: map-get($hover-styles, border-bottom-color);
    }
    @if map-has-key($hover-styles, color) {
      color: map-get($hover-styles, color);
    }
  }

  &:active {
    transition-duration: 0s;
    // Down styles
    @if map-has-key($down-styles, background-color) {
      background-color: map-get($down-styles, background-color);
    }
    @if map-has-key($down-styles, border-color) {
      border-color: map-get($down-styles, border-color);
    }
    @if map-has-key($down-styles, border-top-color) {
      border-top-color: map-get($down-styles, border-top-color);
    }
    @if map-has-key($down-styles, border-bottom-color) {
      border-bottom-color: map-get($down-styles, border-bottom-color);
    }
    @if map-has-key($down-styles, color) {
      color: map-get($down-styles, color);
    }
  }

  &.active,
  &.open &[class*="-active"],
  &[class*="-open"] {
    // Active styles
    @if map-has-key($active-styles, background-color) {
      background-color: map-get($active-styles, background-color);
    }
    @if map-has-key($active-styles, border-color) {
      border-color: map-get($active-styles, border-color);
    }
    @if map-has-key($active-styles, border-top-color) {
      border-top-color: map-get($active-styles, border-top-color);
    }
    @if map-has-key($active-styles, border-bottom-color) {
      border-bottom-color: map-get($active-styles, border-bottom-color);
    }
    @if map-has-key($active-styles, color) {
      color: map-get($active-styles, color);
    }

    &:active {
      // Active Down styles
      @if map-has-key($active-down-styles, background-color) {
        background-color: map-get($active-down-styles, background-color);
      }
      @if map-has-key($active-down-styles, border-color) {
        border-color: map-get($active-down-styles, border-color);
      }
      @if map-has-key($active-down-styles, border-top-color) {
        border-top-color: map-get($active-down-styles, border-top-color);
      }
      @if map-has-key($active-down-styles, border-bottom-color) {
        border-bottom-color: map-get($active-down-styles, border-bottom-color);
      }
      @if map-has-key($active-down-styles, color) {
        color: map-get($active-down-styles, color);
      }
    }
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px $color-highlight;
    z-index: 1;
  }

  &[disabled],
  &[disabled]:hover,
  &[disabled]:focus,
  &[disabled]:active {
    cursor: default;
    opacity: 0.8;
    background-color: darker-color(
      desaturate($button-background-color-base, 100%),
      $button-reaction-degree
    );
    border-color: darker-color(
      desaturate($button-border-color-base, 100%),
      $button-reaction-degree
    );
    color: darker-color(
      desaturate($button-label-color-base, 100%),
      $button-reaction-degree
    );
  }
}
