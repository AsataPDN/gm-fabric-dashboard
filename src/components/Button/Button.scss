// components/buttons.scss
@import "../../style/variables.scss";
@import "../../style/mixins.scss";

// Local Variables
// Variables for Buttons are contained in button-mixins.scss

// Mixins
@mixin function-button-icon-size(
  $button-icon-size: $button-icon-size-default) {
}

@mixin function-button-orientation(
  $button-content-orientation: $button-content-orientation-default,
  $button-content-spacing-base: $button-content-spacing-base-default
) {
  @if $button-content-orientation == horizontal {
    flex-direction: row;
    > :not(:first-child) {
      margin-left: $button-content-spacing-base;
      flex-basis: auto;
    }
  } @else if $button-content-orientation == vertical {
    padding-top: $button-content-spacing-base;
    flex-direction: column;
    > :not(:first-child) {
      margin-top: $button-content-spacing-base / 2;
    }
  }
}

@mixin button-style-set($base-color: null) {
  &:not([class*="btn-outline"]),
  &.btn-outline-raised-outline {
    @if $base-color {
      @include function-button-style(
        $button-outline-style: raised-outline,
        $button-background-color-base: $base-color
      );
    } @else {
      @include function-button-style(
        $button-outline-style: raised-outline
      );
    }
  }
  &.btn-outline-shadow {
    @if $base-color {
      @include function-button-style(
      $button-outline-style: shadow,
      $button-background-color-base: $base-color
    );
    } @else {
      @include function-button-style(
      $button-outline-style: shadow
    );
    }
  }
  &.btn-outline-raised {
    @if $base-color {
      @include function-button-style(
      $button-outline-style: raised,
      $button-background-color-base: $base-color
    );
    } @else {
      @include function-button-style(
      $button-outline-style: raised
    );
    }
  }
  &.btn-outline-outline {
    @if $base-color {
      @include function-button-style(
      $button-outline-style: outline,
      $button-background-color-base: $base-color
    );
    } @else {
      @include function-button-style(
      $button-outline-style: outline
    );
    }
  }
  &.btn-outline-none {
    @if $base-color {
      @include function-button-style(
      $button-outline-style: none,
      $button-background-color-base: $base-color
    );
    } @else {
      @include function-button-style(
      $button-outline-style: none
    );
    }
  }
}

// Styles
.btn {
  @include function-button-base();

  // Styles
  &:not([class*="btn-type"]),
  &.btn-default {
    @include button-style-set();
  }
  &.btn-type-danger {
    @include button-style-set($color-danger);
  }
  &.btn-type-info {
    @include button-style-set($color-info);
  }
  &.btn-type-warning {
    @include button-style-set($color-warning);
  }
  &.btn-type-primary {
    @include button-style-set($color-brand-primary);
  }
  &.btn-type-polling {
    @include button-style-set($color-content-background);
  }

  // Sizes
  &:not([class*="btn-size"]),
  &.btn-size-normal {
    @include function-button-size();
  }
  &.btn-size-xs {
    @include function-button-size(xs);
  }
  &.btn-size-sm {
    @include function-button-size(sm);
  }
  &.btn-size-lg {
    @include function-button-size(lg);
  }
  &.btn-size-xl {
    @include function-button-size(xl);
  }

  // Icons
  &:not([class*="btn-icon-size"]),
  &.btn-icon-size-normal {
    @include function-button-icon-size ();
  }
  &.btn-icon-size-xs {
    @include function-button-icon-size ($button-icon-size-default * .5);
  }
  &.btn-icon-size-sm {
    @include function-button-icon-size ($button-icon-size-default * .75);
  }
  &.btn-icon-size-lg {
    @include function-button-icon-size ($button-icon-size-default * 1.25);
  }
  &.btn-icon-size-xl {
    @include function-button-icon-size ($button-icon-size-default * 1.5);
  }

  // Orientations
  &:not(.btn-orientation-vertical),
  &.btn-orientation-horizontal {
    @include function-button-orientation(
      $button-content-orientation: horizontal
    );
  }
  &.btn-orientation-vertical {
    @include function-button-orientation(
      $button-content-orientation: vertical
    );
  }
}
