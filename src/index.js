import React from 'react';
import ReactDOM from 'react-dom';
import { Provider } from 'react-redux';
import { Router, Route, IndexRoute, useRouterHistory } from 'react-router';
import { createHistory, createHashHistory } from 'history';
import UIkit from 'uikit';
import Icons from 'uikit/dist/js/uikit-icons';
import Container from './components/Container';
import JSONComponent from './components/JSONComponent';
import store from './store';
import SummaryGrid from './components/SummaryGrid';
import HTTPGrid from './components/HTTPGrid';
import JVMGrid from './components/JVMGrid';
import FinagleGrid from './components/FinagleGrid';
import SettingsGrid from './components/SettingsGrid';
import RouteBar from './components/RouteBar';
import RouteGrid from './components/RouteGrid';
import ThreadsGrid from './components/ThreadsGrid';
import { syncHistoryWithStore } from 'react-router-redux';

// Import the CSS file generated by less, which includes the UIKit css and our custom theme
import './style/index.css';

// load the UIKit Icon plugin
UIkit.use(Icons);

// Use browserHistory if available. Otherwise, fallback to hashHistory.
// Define a base URL for the project if REACT_APP_BASE_URL exists on process.env
const basename = process.env.REACT_APP_BASE_URL ? `/${process.env.REACT_APP_BASE_URL}` : '/';
const customHistory = useRouterHistory(
  !!(window.history && window.history.pushState) ? createHistory : createHashHistory
)({ basename });

// Wire up React Router with Redux
const history = syncHistoryWithStore(customHistory, store);

// Load react-a11y in dev mode
if (process.env.NODE_ENV === 'development') {
  const a11y = require('react-a11y');
  const commentListFailures = (name, id, msg) => {
    // Filter out known accessibility defects with submitted GitHub Issues
    if (
      name === 'AnimationDecorator(ComposedDataDecorator(LineChart))' // See Issue 47
      || name === 'AnimationDecorator(ComposedDataDecorator(AreaChart))' // See Issue 47
      || name === 'Slider' // See Issue 48
    ) return false;
    return true;
  };

  a11y(React, { filterFn: commentListFailures });
}

ReactDOM.render(
  <Provider store={store}>
    <Router history={history} >
      <Route
        component={Container}
        path="/"
      >
        <IndexRoute
          component={SummaryGrid}
        />
        <Route
          component={HTTPGrid}
          path="http"
        />
        <Route
          component={JVMGrid}
          path="jvm"
        />
        <Route
          component={ThreadsGrid}
          path="threads"
        />
        <Route
          component={FinagleGrid}
          path="finagle"
        />
        <Route
          component={JSONComponent}
          path="json"
        />
        <Route
          component={SettingsGrid}
          path="settings"
        />
        <Route 
          component={RouteBar}
          path="route" 
        >
          <Route
            component={RouteGrid}
            path=":routeName"
          />
        </Route>
      </Route>
    </Router>
  </Provider>,
  document.getElementById('root')
);
